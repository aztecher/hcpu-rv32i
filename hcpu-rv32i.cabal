cabal-version:       2.4
name:                hcpu-rv32i
version:             0.1
license:             BSD-2-Clause
author:              John Smith <john@example.com>
maintainer:          John Smith <john@example.com>

common common-options
  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    InstanceSigs
    KindSignatures
    LambdaCase
    NoStarIsType
    PolyKinds
    RankNTypes
    QuantifiedConstraints
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    ViewPatterns
    FlexibleContexts
    MonoLocalBinds
    MagicHash
    GADTs
    -- TemplateHaskell is used to support convenience functions such as
    -- 'listToVecTH' and 'bLit'.
    TemplateHaskell
    QuasiQuotes

    -- Prelude isn't imported by default as Clash offers Clash.Prelude
    NoImplicitPrelude
  ghc-options:
    -Wall -Wcompat
    -haddock

    -- Plugins to support type-level constraint solving on naturals
    -fplugin GHC.TypeLits.Extra.Solver
    -fplugin GHC.TypeLits.Normalise
    -fplugin GHC.TypeLits.KnownNat.Solver

    -- Clash needs access to the source code in compiled modules
    -fexpose-all-unfoldings

    -- Worker wrappers introduce unstable names for functions that might have
    -- blackboxes attached for them. You can disable this, but be sure to add
    -- a no-specialize pragma to every function with a blackbox.
    -fno-worker-wrapper
  build-depends:
    base,
    Cabal,

    -- clash-prelude will set suitable version bounds for the plugins
    clash-prelude >= 1.2.5 && < 1.6,
    ghc-typelits-natnormalise,
    ghc-typelits-extra,
    ghc-typelits-knownnat,


custom-setup
  setup-depends:
    base          >= 4.11 && <5,
    Cabal         >= 2.4,
    cabal-doctest >= 1.0.1 && <1.1

library
  import: common-options
  hs-source-dirs: src
  exposed-modules:
    RV32I.CPU
    RV32I.DSL
    RV32I.Format
    RV32I.Instruction
    RV32I.Programs.Example
    RV32I.Programs.Fib
    RV32I.RAM
    RV32I.Register
    RV32I.Top
    RV32I.Word
  default-language: Haskell2010

-- Builds the executable 'clash', with hcpu-rv32i project in scope
executable clash
  main-is: bin/Clash.hs
  default-language: Haskell2010
  Build-Depends: base, clash-ghc, hcpu-rv32i
  if !os(Windows)
    ghc-options: -dynamic

-- Builds the executable 'clashi', with hcpu-rv32i project in scope
executable clashi
  main-is: bin/Clashi.hs
  default-language: Haskell2010
  if !os(Windows)
    ghc-options: -dynamic
  build-depends: base, clash-ghc, hcpu-rv32i

executable hcpu-rv32i-exe
  import: common-options
  main-is: app/Main.hs
  build-depends:
    base >=4.7 && <5,
    hcpu-rv32i,

test-suite hcpu-rv32i-test
  import: common-options
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  ghc-options: -threaded
  main-is: Spec.hs
  other-modules:
  build-depends:
    hcpu-rv32i,
    HUnit,
    QuickCheck >=2.14.2,
    base >=4.7 && <5,
    clash-prelude,
    deepseq,
    ghc-typelits-extra,
    ghc-typelits-knownnat,
    ghc-typelits-natnormalise,
    hspec,
    pretty-simple,
    typelits-witnesses,
